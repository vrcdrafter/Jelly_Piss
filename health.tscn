[gd_scene load_steps=7 format=2]

[ext_resource path="res://health.gd" type="Script" id=1]
[ext_resource path="res://bar.png" type="Texture" id=2]

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

uniform float max_line_width = 10.0;
uniform float min_line_width = 5.0;
uniform float freq = 1.0;
uniform float block_size = 20.0;
uniform vec4 starting_colour = vec4(0,0,0,1);
uniform vec4 ending_colour = vec4(1);

const float pi = 3.1415;
const int ang_res = 16;
const int grad_res = 8;

float hash(vec2 p, float s) {
	return fract(35.1 * sin(dot(vec3(112.3, 459.2, 753.2), vec3(p, s))));
}

float noise(vec2 p, float s) {
	vec2 d = vec2(0, 1);
	vec2 b = floor(p);
	vec2 f = fract(p);
	return mix(
		mix(hash(b + d.xx, s), hash(b + d.yx, s), f.x),
		mix(hash(b + d.xy, s), hash(b + d.yy, s), f.x), f.y);
}

float getLineWidth(vec2 p, float s) {
	p /= block_size;
	float w = 0.0;
	float intensity = 1.0;
	for (int i = 0; i < 3; i++) {
		w = mix(w, noise(p, s), intensity);
		p /= 2.0;
		intensity /= 2.0;
	}
	
	return mix(max_line_width, min_line_width, w);
}

bool pixelInRange(sampler2D text, vec2 uv, vec2 dist) {
	float alpha = 0.0;
	for (int i = 0; i < ang_res; i++) {
		float angle = 2.0 * pi * float(i) / float(ang_res);
		vec2 disp = dist * vec2(cos(angle), sin(angle));
		if (texture(text, uv + disp).a > 0.0) return true;
	}
	return false;
}

float getClosestDistance(sampler2D text, vec2 uv, vec2 maxDist) {
	if (!pixelInRange(text, uv, maxDist)) return -1.0;
	
	float hi = 1.0; float lo = 0.0;
	
	for (int i = 1; i <= grad_res; i++) {
		float curr = (hi + lo) / 2.0;
		if (pixelInRange(text, uv, curr * maxDist)) {
			hi = curr;
		}
		else {
			lo = curr;
		}
	}
	return hi;
	
}

void fragment() {
	float timeStep = floor(freq * TIME);
	vec2 scaledDist = TEXTURE_PIXEL_SIZE;
	scaledDist *= getLineWidth(UV / TEXTURE_PIXEL_SIZE, timeStep);
	float w = getClosestDistance(TEXTURE, UV, scaledDist);
	
	if (( w > 0.0) && (texture(TEXTURE, UV).a < 0.2)) {
		COLOR = mix(starting_colour, ending_colour, tanh(3.0*w));
	}
	else {
		COLOR = texture(TEXTURE, UV);
	}
	
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/max_line_width = 300.0
shader_param/min_line_width = 50.0
shader_param/freq = 10.0
shader_param/block_size = 10.0
shader_param/starting_colour = Plane( 1, 1, 1, 1 )
shader_param/ending_colour = Plane( 1, 1, 0, 0 )

[sub_resource type="StyleBoxFlat" id=1]
bg_color = Color( 1, 0.86292, 0.0537109, 1 )

[sub_resource type="StyleBoxFlat" id=2]
bg_color = Color( 0.137255, 0.137255, 0.0784314, 1 )
border_width_left = 4
border_width_top = 3
border_width_right = 4
border_width_bottom = 4
shadow_color = Color( 0.898039, 0.278431, 0.278431, 0.6 )

[node name="Control" type="Control"]
margin_right = 378.0
margin_bottom = 127.0
script = ExtResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="health" type="ProgressBar" parent="."]
margin_left = 82.0
margin_top = 13.0
margin_right = 388.0
margin_bottom = 27.0
value = 100.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Sprite" type="Sprite" parent="health"]
material = SubResource( 4 )
position = Vector2( 146, 47 )
scale = Vector2( 0.711083, 0.1205 )
texture = ExtResource( 2 )
region_rect = Rect2( 500, 500, 0, 0 )

[node name="pee_progress_bar" type="ProgressBar" parent="."]
margin_left = 82.0
margin_top = 45.0
margin_right = 388.0
margin_bottom = 66.0
custom_colors/font_color = Color( 0, 0, 0, 1 )
custom_colors/font_color_shadow = Color( 0, 0, 0, 1 )
custom_styles/fg = SubResource( 1 )
custom_styles/bg = SubResource( 2 )
value = 100.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="."]
margin_left = 1.0
margin_top = 16.0
margin_right = 63.0
margin_bottom = 30.0
custom_colors/font_color = Color( 1, 0.0431373, 0.0431373, 1 )
text = "HEALTH "

[node name="Label3" type="Label" parent="."]
margin_left = 660.0
margin_top = 17.0
margin_right = 722.0
margin_bottom = 31.0
custom_colors/font_color = Color( 0.113725, 0.0392157, 0.0392157, 1 )
custom_colors/font_color_shadow = Color( 0.921569, 0.34902, 0.0941176, 1 )
text = "OBJECTIVES:
Pee on all Jelly Fish 
Get drinks for ammo"

[node name="Label2" type="Label" parent="."]
margin_left = 2.0
margin_top = 42.0
margin_right = 64.0
margin_bottom = 56.0
custom_colors/font_color = Color( 1, 0.0431373, 0.0431373, 1 )
text = "PEE "

[node name="Timer" type="Timer" parent="."]
autostart = true

[connection signal="timeout" from="Timer" to="." method="_on_Timer_timeout"]
